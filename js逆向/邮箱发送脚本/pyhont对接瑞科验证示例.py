import time
from RkSDK import RkSDK
from RkSDK import Rk初始化软件入参类
from RkSDK import Rk通讯加密方式枚举类
from RkSDK import Rk禁用还是删除枚举类
from RkSDK import Rk结果心跳失败类

global rksdk
rksdk = RkSDK()
rk初始化软件入参 = Rk初始化软件入参类()
def 接收心跳失败的函数(rk结果心跳失败: Rk结果心跳失败类):
    print("错误编码：" + str(rk结果心跳失败.错误编码))
    print("错误消息：" + rk结果心跳失败.错误消息)
    #错误编码有以下几种对您可能有用处：
    # 1053:此软件已被禁用
    # 6005:卡密被禁用
    # 6003:卡密到期
    # 6004:卡密点数不足
    # 4005:账号被禁用
    # 4003:账号到期
    # 4004:账号点数不足
    # 1067:被其它顶号登录
    # 1013:非绑定电脑上登陆
    # 1093:请求过快，请10分钟后再试【请您差开时间的访问，别连续不间断的请求，容易被服务器拉黑IP】

    # 你可以根据以上错误编码，在下面写您自己的业务逻辑代码
    # 您自己的业务逻辑代码.................................

    #只要收到心跳错误消息，那么就说明您的软件是非正常运行，那么处理了您的业务逻辑代码后，直接强制把您软件整个关闭吧！
    rksdk.关闭当前软件()

def 单码操作示例():
    rk初始化软件入参.平台用户编码 = "1af632b8d36ab405"
    rk初始化软件入参.软件编码 = "0f0a70a4619e24ca"
    rk初始化软件入参.通讯加密方式 = Rk通讯加密方式枚举类.DES加密
    rk初始化软件入参.加密Key = "c7aa3191"
    rk初始化软件入参.签名盐 = "26c2a5e4"
    rk初始化软件入参.软件版本号 = "v1.0"
    rk初始化软件入参.心跳失败的回调函数 = 接收心跳失败的函数
    rk结果初始化软件 = rksdk.初始化软件函数(rk初始化软件入参)

    if rk结果初始化软件.错误编码 == 0:
        print("\n初始初始化成功，软件公告：" + rk结果初始化软件.软件信息.软件公告 +
              " 软件基础数据：" + rk结果初始化软件.软件信息.软件基础数据 + " 软件名称：" + rk结果初始化软件.软件信息.软件名称 +
              " 咨询官网：" + rk结果初始化软件.软件信息.咨询官网 + " 咨询微信：" + rk结果初始化软件.软件信息.咨询微信 +
              " 软件当前最新版本号：" + rk结果初始化软件.软件信息.软件当前最新版本号 +
              " 软件更新的网盘地址：" + rk结果初始化软件.软件信息.软件更新的网盘地址 +
              " 网盘提取码：" + rk结果初始化软件.软件信息.网盘提取码 +
              " 软件是否强制更新：" + str(rk结果初始化软件.软件信息.软件是否强制更新))

        time.sleep(1)
        rk结果单码登录 = rksdk.单码登录函数("815aab2945b9ee0d")
        if rk结果单码登录.错误编码 == 0:
            # 登录成功后，在此写你自己的业务逻辑代码
            print("单码登录成功，账号到期时间：" + rk结果单码登录.到期时间 + "  账号剩余点数：" + str(
                rk结果单码登录.剩余点数) + " 备注：" + rk结果单码登录.备注 + " 角色名称：" + rk结果单码登录.角色名称)

            time.sleep(1)
            rk结果获取远程变量 = rksdk.获取远程变量函数("测试变量名")
            if rk结果获取远程变量.错误编码 == 0:
                print("获取变量值成功：" + rk结果获取远程变量.变量值)
            else:
                print("攻取变量值失败：" + rk结果获取远程变量.错误消息)

            time.sleep(1)
            # 扣的点数：如果传入0，那么就扣除后台设置的数值
            rk结果扣点 = rksdk.扣点函数(1)
            if rk结果扣点.错误编码 == 0:
                print("扣点成功，剩余点数：" + str(rk结果扣点.剩余点数))
            else:
                print("扣点失败：" + rk结果扣点.错误消息)

            time.sleep(1)
            rk结果单码详情 = rksdk.单码详情函数()
            if rk结果单码详情.错误编码 == 0:
                print("单码详情获取成功，单码到期时间：" + rk结果单码详情.到期时间 + "  单码剩余点数：" + str(
                    rk结果单码详情.剩余点数) + " 备注：" + rk结果单码详情.备注)
            else:
                print("单码详情获取失败：" + rk结果单码详情.错误消息)

            time.sleep(1)
            rk结果修改备注 = rksdk.修改备注函数("这时我修改的备注内容，您可以针对单张卡放一些私有数据")
            if rk结果修改备注.错误编码 == 0:
                print("备注修改成功")
            else:
                print("备注修改失败：" + rk结果修改备注.错误消息)

            time.sleep(3)
            rk结果基础 = rksdk.退出登录函数()
            if rk结果基础.错误编码 == 0:
                print("退出登录成功")
        else:
            print("单码登录失败，错误编码：" + str(rk结果单码登录.错误编码) + " 错误消息：" + rk结果单码登录.错误消息)

        time.sleep(1)
        rk结果充值卡详情 = rksdk.充值卡详情函数("bd0b43317520c098$")
        if rk结果充值卡详情.错误编码 == 0:
            print("充值卡查询成功，所属软件：" + rk结果充值卡详情.所属软件 + " 可使用值：" + rk结果充值卡详情.可使用值
                  + " 消耗类型：" + rk结果充值卡详情.消耗类型 + " 使用状态：" + rk结果充值卡详情.使用状态)
        else:
            print("充值卡查询失败：" + rk结果充值卡详情.错误消息)
        time.sleep(1)
        rk结果充值 = rksdk.充值卡充值函数("815aab2945b9ee0d", "bd0b43317520c098$")
        if rk结果充值.错误编码 == 0:
            print("充值成功")
        else:
            print("充值失败：" + rk结果充值.错误消息)

        time.sleep(1)
        rk结果解绑机器码 = rksdk.解绑机器码函数("815aab2945b9ee0d")
        if rk结果解绑机器码.错误编码 == 0:
            print("解绑成功，到期时间：" + rk结果解绑机器码.到期时间 + " 剩余点数：" + str(rk结果解绑机器码.剩余点数))
        else:
            print("解绑失败：" + rk结果解绑机器码.错误消息)

        time.sleep(1)
        print("如果在你自己软件里面判断出有被破解的迹象，那么就调用此函数吧：禁用删除当前登录的单码或账号函数")
        rksdk.禁用删除当前登录的单码或账号函数(Rk禁用还是删除枚举类.禁用)

    else:
        print("\n软件初始化失败，错误编码：" + str(rk结果初始化软件.错误编码) + "  错误消息：" + rk结果初始化软件.错误消息)


def 账号操作示例():
    rk初始化软件入参.平台用户编码 = "1af632b8d36ab405"
    rk初始化软件入参.软件编码 = "e50f23c7d757ae5e"
    rk初始化软件入参.通讯加密方式 = Rk通讯加密方式枚举类.DES加密
    rk初始化软件入参.加密Key = "eae1806c"
    rk初始化软件入参.签名盐 = "1ae95e58"
    rk初始化软件入参.软件版本号 = "v1.0"
    rk初始化软件入参.心跳失败的回调函数 = 接收心跳失败的函数
    rk结果初始化软件 = rksdk.初始化软件函数(rk初始化软件入参)
    if rk结果初始化软件.错误编码 == 0:
        print("\n初始初始化成功，软件公告：" + rk结果初始化软件.软件信息.软件公告 +
              " 软件基础数据：" + rk结果初始化软件.软件信息.软件基础数据 + " 软件名称：" + rk结果初始化软件.软件信息.软件名称 +
              " 咨询官网：" + rk结果初始化软件.软件信息.咨询官网 + " 咨询微信：" + rk结果初始化软件.软件信息.咨询微信 +
              " 软件当前最新版本号：" + rk结果初始化软件.软件信息.软件当前最新版本号 +
              " 软件更新的网盘地址：" + rk结果初始化软件.软件信息.软件更新的网盘地址 +
              " 网盘提取码：" + rk结果初始化软件.软件信息.网盘提取码 +
              " 软件是否强制更新：" + str(rk结果初始化软件.软件信息.软件是否强制更新))

        time.sleep(1)
        rk结果账号登录 = rksdk.账号登录函数("Account1", "123")
        if rk结果账号登录.错误编码 == 0:
            # 登录成功后，在此写你自己的业务逻辑代码
            print("账号登录成功，账号到期时间：" + rk结果账号登录.到期时间 + "  账号剩余点数：" + str(
                rk结果账号登录.剩余点数) + " 备注：" + rk结果账号登录.备注 + " 角色名称：" + rk结果账号登录.角色名称)

            time.sleep(1)
            rk结果获取远程变量 = rksdk.获取远程变量函数("测试变量名")
            if rk结果获取远程变量.错误编码 == 0:
                print("获取变量值成功：" + rk结果获取远程变量.变量值)
            else:
                print("攻取变量值失败：" + rk结果获取远程变量.错误消息)

            time.sleep(1)
            # 扣的点数：如果传入0，那么就扣除后台设置的数值
            rk结果扣点 = rksdk.扣点函数(1)
            if rk结果扣点.错误编码 == 0:
                print("扣点成功，剩余点数：" + str(rk结果扣点.剩余点数))
            else:
                print("扣点失败：" + rk结果扣点.错误消息)

            time.sleep(1)
            rk结果账号单码详情 = rksdk.账号详情函数()
            if rk结果账号单码详情.错误编码 == 0:
                print("账号详情获取成功，账号到期时间：" + rk结果账号单码详情.到期时间 + "  账号剩余点数：" + str(
                    rk结果账号单码详情.剩余点数) + " 备注：" + rk结果账号单码详情.备注)
            else:
                print("单码详情获取失败：" + rk结果账号单码详情.错误消息)

            time.sleep(1)
            rk结果修改备注 = rksdk.修改备注函数("这时我修改的备注内容，您可以针对单张卡放一些私有数据")
            if rk结果修改备注.错误编码 == 0:
                print("备注修改成功")
            else:
                print("备注修改失败：" + rk结果修改备注.错误消息)

            time.sleep(3)
            rk结果基础 = rksdk.退出登录函数()
            if rk结果基础.错误编码 == 0:
                print("退出登录成功")
        else:
            print("单码登录失败，错误编码：" + str(rk结果账号登录.错误编码) + " 错误消息：" + rk结果账号登录.错误消息)

        time.sleep(1)
        rk结果账号注册 = rksdk.账号注册函数("test1", "123")
        if rk结果账号注册.错误编码 == 0:
            print("账号注册成功")
        else:
            print("账号注册失败：" + rk结果账号注册.错误消息)
        time.sleep(1)
        rk结果修改账号密码 = rksdk.修改账号密码函数("test1", "123", "111")
        if rk结果修改账号密码.错误编码 == 0:
            print("密码修改成功")
        else:
            print("密码修改失败：" + rk结果修改账号密码.错误消息)

        time.sleep(1)
        rk结果充值卡详情 = rksdk.充值卡详情函数("bd0b43317520c098$")
        if rk结果充值卡详情.错误编码 == 0:
            print("充值卡查询成功，所属软件：" + rk结果充值卡详情.所属软件 + " 可使用值：" + rk结果充值卡详情.可使用值
                  + " 消耗类型：" + rk结果充值卡详情.消耗类型 + " 使用状态：" + rk结果充值卡详情.使用状态)
        else:
            print("充值卡查询失败：" + rk结果充值卡详情.错误消息)
        time.sleep(1)
        rk结果充值 = rksdk.充值卡充值函数("Account1", "bd0b43317520c098$")
        if rk结果充值.错误编码 == 0:
            print("充值成功")
        else:
            print("充值失败：" + rk结果充值.错误消息)

        time.sleep(1)
        rk结果解绑机器码 = rksdk.解绑机器码函数("Account1")
        if rk结果解绑机器码.错误编码 == 0:
            print("解绑成功，到期时间：" + rk结果解绑机器码.到期时间 + " 剩余点数：" + str(rk结果解绑机器码.剩余点数))
        else:
            print("解绑失败：" + rk结果解绑机器码.错误消息)

        time.sleep(1)
        print("如果在你自己软件里面判断出有被破解的迹象，那么就调用此函数吧：禁用删除当前登录的单码或账号函数")
        rksdk.禁用删除当前登录的单码或账号函数(Rk禁用还是删除枚举类.禁用)
    else:
        print("\n软件初始化失败，错误编码：" + str(rk结果初始化软件.错误编码) + "  错误消息：" + rk结果初始化软件.错误消息)


if __name__ == '__main__':
    单码操作示例()
    #账号操作示例()

    ss = ""
    while True:
        time.sleep(2)
