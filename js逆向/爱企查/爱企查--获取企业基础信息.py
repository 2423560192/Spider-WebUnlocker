"""
爱企查：2023-8-26
"""
import requests
from jsonpath import jsonpath

# 请求头方式
headers = {
    'Connection': 'keep-alive',
    'Cookie': 'BAIDUID=5F8E42119938A55E90637C029A4C140A:FG=1; PSTM=1678530126; BIDUPSID=D4AA06A7B7C86CAD3189CDE4ED85C09B; H_WISE_SIDS=219946_234020_216843_213350_214797_219943_213031_204901_230288_110085_236312_243706_243886_244723_245412_245654_232281_249910_247146_250890_251425_249892_252580_234295_253705_253877_253975_253427_240590_254473_251786_254733_250226_254769_253213_255640_254765_255956_234484_107312_256062_256094_252560_256083_255803_253993_255659_255476_256024_256225_256439_256505_254831_249406_256657_250842_256196_256739_251973_256228_248436_256587_257079_257105_257115_254144_257289_251068_256095_257333_257338_254317_251058_251133_254300_257437_255906_255324_257481_257542_257624_255177_257786_257940_257167_257903_258011_258032_257822_257586_257401_255224_257789_258053_253900_257262_8000084_8000118_8000133_8000136_8000150_8000184_8000186_8000203; H_WISE_SIDS_BFESS=219946_234020_216843_213350_214797_219943_213031_204901_230288_110085_236312_243706_243886_244723_245412_245654_232281_249910_247146_250890_251425_249892_252580_234295_253705_253877_253975_253427_240590_254473_251786_254733_250226_254769_253213_255640_254765_255956_234484_107312_256062_256094_252560_256083_255803_253993_255659_255476_256024_256225_256439_256505_254831_249406_256657_250842_256196_256739_251973_256228_248436_256587_257079_257105_257115_254144_257289_251068_256095_257333_257338_254317_251058_251133_254300_257437_255906_255324_257481_257542_257624_255177_257786_257940_257167_257903_258011_258032_257822_257586_257401_255224_257789_258053_253900_257262_8000084_8000118_8000133_8000136_8000150_8000184_8000186_8000203; BDORZ=B490B5EBF6F3CD402E515D22BCDA1598; BA_HECTOR=0la4858k0kag2h2l8k802k2p1ieev9f1o; BAIDUID_BFESS=5F8E42119938A55E90637C029A4C140A:FG=1; ZFY=zbEK:AdsxnSnQ9SP1:BeI439MTPAip:Azn4PNO4v9cLdj4:C; log_guid=670004a8f03e77ad39606375be6a4375; _j47_ka8_=57; ZX_UNIQ_UID=5683fe401e249c2a4ea0ffbf102f65e3; ZX_HISTORY=%5B%7B%22visittime%22%3A%222023-08-24+23%3A55%3A07%22%2C%22pid%22%3A%22xlTM-TogKuTwAXh2jrAriPrddD2RZcjirwmd%22%7D%5D; BDPPN=756024c753e35d5357573d82a00456bf; login_type=passport; delPer=0; PSINO=7; BCLID=8012932507214219177; BCLID_BFESS=8012932507214219177; BDSFRCVID=ySKOJexroG0fe17fgBv8UraDWgKKg7jTDYrEfGlxtTycECAVcxicEG0PtOqPGZu-S2L0ogKKKmOTH1IF_2uxOjjg8UtVJeC6EG0Ptf8g0M5; BDSFRCVID_BFESS=ySKOJexroG0fe17fgBv8UraDWgKKg7jTDYrEfGlxtTycECAVcxicEG0PtOqPGZu-S2L0ogKKKmOTH1IF_2uxOjjg8UtVJeC6EG0Ptf8g0M5; H_BDCLCKID_SF=tRAOoCI2tKvDqTrP-trf5DCShUFsLT-jB2Q-XPoO3KJteDD6b4JI56kAKxQRL-biWKkfBfbgy4op8P3y0bb2DUA1y4vp5bv0K2TxoUJ2B-jmsUcGqq-KX58ebPRiB-r9Qg-DalQ7tt5W8ncFbT7l5hKpbt-q0x-jLTnhVn0MBCK0hD89DjuMDTP_MqQ05-vKHDrKBRbaHJOoDDvw0URcy4LbKxnxJP5-tRvh0hoKfU5KHqb5bURvbT-q3-OkbfQh3KJOLUbXKh5TEfQn2-rjQfbQ0hO9blOxyjILbKo1tn7JOpvohfnxy5_PQRPH-Rv92DQMVU52QqcqEIQHQT3m5-5bbN3ut6T2-DA_oCK2fCbP; H_BDCLCKID_SF_BFESS=tRAOoCI2tKvDqTrP-trf5DCShUFsLT-jB2Q-XPoO3KJteDD6b4JI56kAKxQRL-biWKkfBfbgy4op8P3y0bb2DUA1y4vp5bv0K2TxoUJ2B-jmsUcGqq-KX58ebPRiB-r9Qg-DalQ7tt5W8ncFbT7l5hKpbt-q0x-jLTnhVn0MBCK0hD89DjuMDTP_MqQ05-vKHDrKBRbaHJOoDDvw0URcy4LbKxnxJP5-tRvh0hoKfU5KHqb5bURvbT-q3-OkbfQh3KJOLUbXKh5TEfQn2-rjQfbQ0hO9blOxyjILbKo1tn7JOpvohfnxy5_PQRPH-Rv92DQMVU52QqcqEIQHQT3m5-5bbN3ut6T2-DA_oCK2fCbP; Hm_lvt_ad52b306e1ae4557f5d3534cce8f8bbf=1692892468,1692972377; log_first_time=1692975168761; BDUSS=Vplc0tTWnB5fnItVUlZZWQzbWRUUjhjMmRHUmRqdzhDZDJBdEtIRmF6cHRUaEJsSUFBQUFBJCQAAAAAAAAAAAEAAACksY~2Y3MyNDgwNDE5MTcyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG3B6GRtwehkb; BDUSS_BFESS=Vplc0tTWnB5fnItVUlZZWQzbWRUUjhjMmRHUmRqdzhDZDJBdEtIRmF6cHRUaEJsSUFBQUFBJCQAAAAAAAAAAAEAAACksY~2Y3MyNDgwNDE5MTcyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG3B6GRtwehkb; _t4z_qc8_=xlTM-TogKuTw%2ATjGL4XvEWcZ7ppS6N169gmd; log_chanel=; ab169297200=175cafe1cdfe8cfea7def524bc24e8a616929755562d2; H_PS_PSSID=36555_39226_39215_39222_39097_39193_39198_39240_26350_39239_39138_39137_39100; _fb537_=xlTM-TogKuTwlsQ8HcBKDxl-FWq164xtADf%2AwiCx8tyMOWrsD8Gc2t4md; ab169297560=155cafe1cdfe8cfea7def524bc24e8a616929776182d5; Hm_lpvt_ad52b306e1ae4557f5d3534cce8f8bbf=1692977619; ab_sr=1.0.1_MWNmOThiODY3ZTY2MjIxYjU4NDY4YjBiZWRjOTcxMjZjZTk5MWQ0MGVmMDk5NDU3MzJiYzIzMzVlNGJkNWI5ZGI5ZWVkMzJlNWQyNTEzYTg3YWYyZGEwZGY2MWQ5ZTA4NTFkMjc2NTFjMGU4NTI1NjhlMDI0YmJjZGU3ZjUzNDc0Nzg3M2JhZTIxOWZhNzE3OWNkMmZhYzM5ZjEzMGQ4Mg==; _s53_d91_=f725074929c803a5eb4a75880bff103b8e723dd4ac35fa7f9d9e3ca13845fce3430f86380daa91d38079bb86b3396ef26742cea173eaef755c3c397796e8160963f523746202adf921a0883cde67f606a2a7f8b5af2230b57a398bf841804b8d2f8d4f4784963544d3d2565667aa69418d60cfc4b6890d67a4475e90d1da7f8edcee08ce8a9861b81161270faad97a2d1fc9a445e5ab5f215a0ddd946995dac9d4514436080d35c5f73417af2eb33200697a0909455c46bb888194853536f5e1ff417790778e28ba0af09d9b15d7c332acee9ded310d632e009afbd551324410; _y18_s21_=86afe0ce; RT="z=1&dm=baidu.com&si=bf163ff8-ce21-40fa-8c70-4ab081126278&ss=llqo1hs5&sl=m&tt=1at8&bcn=https%3A%2F%2Ffclog.baidu.com%2Flog%2Fweirwood%3Ftype%3Dperf&ld=36jlt&nu=9y8m6cy&cl=36pnx"; log_last_time=1692977728177; BAIDUID=A01AB09358AA7E045C621A853F20DB81:FG=1; BAIDUID_BFESS=A01AB09358AA7E045C621A853F20DB81:FG=1',
    'Referer': 'https://aiqicha.baidu.com/s?q=%E9%87%8D%E5%BA%86&t=0&login_type=qzone',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36'
}

# 加密方式
dic1 = {
    '0': '0',
    '1': '1',
    '2': '2',
    '3': '3',
    '4': '5',
    '5': '4',
    '6': '7',
    '7': '6',
    '8': '9',
    '9': '8'
}
dic2 = {
    '0': '0',
    '1': '1',
    '2': '2',
    '3': '3',
    '4': '6',
    '5': '8',
    '6': '9',
    '7': '4',
    '8': '5',
    '9': '7'
}


# 进行解密处理
def replace_numbers(numbers, dic):
    return ''.join(dic[i] for i in numbers)


# 获取pid
def get_company_pid():
    url = "https://aiqicha.baidu.com/s/advanceFilterAjax?q=%E9%87%8D%E5%BA%86&t=&p=3&s=10&o=0&f=%7B%7D"
    payload = {
        'q': '重庆',
        't': '',
        'p': 3,
        's': '10',
        'o': '0',
        'f': {},
    }
    resp = requests.get(url, params=payload, headers=headers)
    if resp.status_code == 200:
        data = resp.json()
        print(data)
        # 获取企业pid
        company_pid = jsonpath(data, '$..data..resultList..pid')
        print('解密前：', company_pid)
        # 获取加密方式
        j_num = jsonpath(data, '$..ddw')[0]
        # 构建新的pid
        if j_num == 1:
            company_pid_new = [replace_numbers(d, dic1) for d in company_pid]
        else:
            company_pid_new = [replace_numbers(d, dic2) for d in company_pid]
        print('解密后：', company_pid_new)

        return company_pid_new


# 获取数据
def get_company_data(pid):
    url = "https://aiqicha.baidu.com/detail/basicAllDataAjax?pid=56231723165774"
    payload = {
        'pid': pid
    }

    resp = requests.get(url, headers=headers, params=payload)

    if resp.status_code == 200:
        data = resp.json()
        print(data)
        # 获取企业数据
        name = jsonpath(data, '$..data.basicData.entName')[0]
        regNo = jsonpath(data, '$..data.basicData.regNo')[0]

        print('企业名:', name)
        print('信用代码:', regNo)


if __name__ == '__main__':
    pids = get_company_pid()
    # 开始获取企业数据
    for pid in pids:
        get_company_data(pid)
